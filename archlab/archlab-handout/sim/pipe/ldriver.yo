                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f45806000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6d803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7c801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Name: Xuan ID:2022
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6222                 | 	andq %rdx, %rdx 	#len > 0 ?
0x034: 71c601000000000000   | 	jle	Done
0x03d: 705001000000000000   | 	jmp test
0x046:                      | Loop0:
0x046: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x050: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x05a: 6288                 | 	andq %r8, %r8
0x05c: 716f00000000000000   | 	jle Loop1
0x065: c0f00100000000000000 | 	iaddq $1, %rax
0x06f:                      | Loop1:
0x06f: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x079: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x083: 6299                 | 	andq %r9, %r9
0x085: 719800000000000000   | 	jle Loop2
0x08e: c0f00100000000000000 | 	iaddq $1, %rax	
0x098:                      | Loop2:
0x098: 50871000000000000000 | 	mrmovq 16(%rdi), %r8
0x0a2: 50971800000000000000 | 	mrmovq 24(%rdi), %r9
0x0ac: 6288                 | 	andq %r8, %r8
0x0ae: 71c100000000000000   | 	jle Loop3
0x0b7: c0f00100000000000000 | 	iaddq $1, %rax
0x0c1:                      | Loop3:
0x0c1: 40861000000000000000 | 	rmmovq %r8, 16(%rsi)
0x0cb: 40961800000000000000 | 	rmmovq %r9, 24(%rsi)
0x0d5: 6299                 | 	andq %r9, %r9
0x0d7: 71ea00000000000000   | 	jle Loop4
0x0e0: c0f00100000000000000 | 	iaddq $1, %rax	
0x0ea:                      | Loop4:
0x0ea: 50872000000000000000 | 	mrmovq 32(%rdi), %r8
0x0f4: 50972800000000000000 | 	mrmovq 40(%rdi), %r9
0x0fe: 6288                 | 	andq %r8, %r8
0x100: 711301000000000000   | 	jle Loop5
0x109: c0f00100000000000000 | 	iaddq $1, %rax
0x113:                      | Loop5:
0x113: 40862000000000000000 | 	rmmovq %r8, 32(%rsi)
0x11d: 40962800000000000000 | 	rmmovq %r9, 40(%rsi)
0x127: 6299                 | 	andq %r9, %r9
0x129: 713c01000000000000   | 	jle Loop6
0x132: c0f00100000000000000 | 	iaddq $1, %rax	
0x13c:                      | Loop6:
0x13c: c0f73000000000000000 | 	iaddq $48, %rdi
0x146: c0f63000000000000000 | 	iaddq $48, %rsi
0x150:                      | test:
0x150: c0f2faffffffffffffff | 	iaddq $-6, %rdx
0x15a: 754600000000000000   | 	jge Loop0
                            | 	
0x163: c0f20600000000000000 | 	iaddq $6, %rdx
0x16d: 73c601000000000000   | 	je Done
0x176:                      | loop:
0x176: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x180: c0f70800000000000000 | 	iaddq $8, %rdi
0x18a: 62aa                 | 	andq %r10, %r10
0x18c: 719f01000000000000   | 	jle Add
0x195: c0f00100000000000000 | 	iaddq $1, %rax
0x19f:                      | Add:
0x19f: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x1a9: c0f60800000000000000 | 	iaddq $8, %rsi
0x1b3: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x1bd: 767601000000000000   | 	jg loop
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1c6:                      | Done:
0x1c6: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1c7:                      | End:
                            | #/* $end ncopy-ys */
0x1c7:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1c8:                      | 	.align 8
0x1c8:                      | src:
0x1c8: 0100000000000000     | 	.quad 1
0x1d0: feffffffffffffff     | 	.quad -2
0x1d8: fdffffffffffffff     | 	.quad -3
0x1e0: fcffffffffffffff     | 	.quad -4
0x1e8: 0500000000000000     | 	.quad 5
0x1f0: 0600000000000000     | 	.quad 6
0x1f8: f9ffffffffffffff     | 	.quad -7
0x200: f8ffffffffffffff     | 	.quad -8
0x208: f7ffffffffffffff     | 	.quad -9
0x210: f6ffffffffffffff     | 	.quad -10
0x218: 0b00000000000000     | 	.quad 11
0x220: f4ffffffffffffff     | 	.quad -12
0x228: 0d00000000000000     | 	.quad 13
0x230: f2ffffffffffffff     | 	.quad -14
0x238: f1ffffffffffffff     | 	.quad -15
0x240: f0ffffffffffffff     | 	.quad -16
0x248: 1100000000000000     | 	.quad 17
0x250: 1200000000000000     | 	.quad 18
0x258: edffffffffffffff     | 	.quad -19
0x260: 1400000000000000     | 	.quad 20
0x268: 1500000000000000     | 	.quad 21
0x270: eaffffffffffffff     | 	.quad -22
0x278: e9ffffffffffffff     | 	.quad -23
0x280: e8ffffffffffffff     | 	.quad -24
0x288: 1900000000000000     | 	.quad 25
0x290: e6ffffffffffffff     | 	.quad -26
0x298: 1b00000000000000     | 	.quad 27
0x2a0: e4ffffffffffffff     | 	.quad -28
0x2a8: e3ffffffffffffff     | 	.quad -29
0x2b0: 1e00000000000000     | 	.quad 30
0x2b8: 1f00000000000000     | 	.quad 31
0x2c0: 2000000000000000     | 	.quad 32
0x2c8: dfffffffffffffff     | 	.quad -33
0x2d0: 2200000000000000     | 	.quad 34
0x2d8: ddffffffffffffff     | 	.quad -35
0x2e0: 2400000000000000     | 	.quad 36
0x2e8: 2500000000000000     | 	.quad 37
0x2f0: 2600000000000000     | 	.quad 38
0x2f8: 2700000000000000     | 	.quad 39
0x300: 2800000000000000     | 	.quad 40
0x308: 2900000000000000     | 	.quad 41
0x310: d6ffffffffffffff     | 	.quad -42
0x318: 2b00000000000000     | 	.quad 43
0x320: d4ffffffffffffff     | 	.quad -44
0x328: d3ffffffffffffff     | 	.quad -45
0x330: d2ffffffffffffff     | 	.quad -46
0x338: d1ffffffffffffff     | 	.quad -47
0x340: d0ffffffffffffff     | 	.quad -48
0x348: cfffffffffffffff     | 	.quad -49
0x350: ceffffffffffffff     | 	.quad -50
0x358: cdffffffffffffff     | 	.quad -51
0x360: 3400000000000000     | 	.quad 52
0x368: 3500000000000000     | 	.quad 53
0x370: 3600000000000000     | 	.quad 54
0x378: 3700000000000000     | 	.quad 55
0x380: c8ffffffffffffff     | 	.quad -56
0x388: 3900000000000000     | 	.quad 57
0x390: c6ffffffffffffff     | 	.quad -58
0x398: 3b00000000000000     | 	.quad 59
0x3a0: 3c00000000000000     | 	.quad 60
0x3a8: c3ffffffffffffff     | 	.quad -61
0x3b0: 3e00000000000000     | 	.quad 62
0x3b8: 3f00000000000000     | 	.quad 63
0x3c0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x3d0:                      | 	.align 16
0x3d0:                      | Predest:
0x3d0: fadebc0000000000     | 	.quad 0xbcdefa
0x3d8:                      | dest:
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0:                      | Postdest:
0x5d0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x5d8:                      | .align 8
                            | # Run time stack
0x5d8: 0000000000000000     | 	.quad 0
0x5e0: 0000000000000000     | 	.quad 0
0x5e8: 0000000000000000     | 	.quad 0
0x5f0: 0000000000000000     | 	.quad 0
0x5f8: 0000000000000000     | 	.quad 0
0x600: 0000000000000000     | 	.quad 0
0x608: 0000000000000000     | 	.quad 0
0x610: 0000000000000000     | 	.quad 0
0x618: 0000000000000000     | 	.quad 0
0x620: 0000000000000000     | 	.quad 0
0x628: 0000000000000000     | 	.quad 0
0x630: 0000000000000000     | 	.quad 0
0x638: 0000000000000000     | 	.quad 0
0x640: 0000000000000000     | 	.quad 0
0x648: 0000000000000000     | 	.quad 0
0x650: 0000000000000000     | 	.quad 0
                            | 
0x658:                      | Stack:
