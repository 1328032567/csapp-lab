0x000:                      | .pos 0
0x000: 30f40002000000000000 |     irmovq stack, %rsp  #Set up stack pointer
0x00a: 804800000000000000   |     call main           #Execute main program  
0x013: 00                   |     halt                #Terminate program
                            | 
0x018:                      |     .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |     .quad 0x0b0
0x030: 3800000000000000     |     .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |     .quad 0xc00
0x040: 0000000000000000     |     .quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq ele1, %rdi  #Move list pointer to %rdi 
0x052: 805c00000000000000   |     call sum
0x05b: 90                   |     ret
                            | 
0x05c:                      | sum:
0x05c: 6300                 |     xorq %rax, %rax     #val = 0
0x05e: 6277                 |     andq %rdi, %rdi     #and ls t = testexp
0x060: 738a00000000000000   |     je   done           #ls == 0 jump to done 
0x069:                      | loop:
0x069: 50870000000000000000 |     mrmovq (%rdi), %r8  #Move number to %r8
0x073: 6080                 |     addq %r8, %rax     #val += ls->val
0x075: 50770800000000000000 |     mrmovq 8(%rdi), %rdi      #ls->next
0x07f: 6277                 |     andq %rdi, %rdi     #and ls t = testexp
0x081: 746900000000000000   |     jne  loop
0x08a:                      | done:
0x08a: 90                   |     ret
                            | 
                            | #Stack starts here and grows to lower addresses
0x200:                      |     .pos 0x200
0x200:                      | stack:
