.pos 0
    irmovq stack, %rsp  #Set up stack pointer
    call main           #Execute main program  
    halt                #Terminate program

    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:
    irmovq ele1, %rdi  #Move list pointer to %rdi 
    call sum
    ret

sum:
    xorq %rax, %rax     #val = 0
    andq %rdi, %rdi     #and ls t = testexp
    je   done           #ls == 0 jump to done 
loop:
    mrmovq (%rdi), %r8  #Move number to %r8
    addq %r8, %rax     #val += ls->val
    mrmovq 8(%rdi), %rdi      #ls->next
    andq %rdi, %rdi     #and ls t = testexp
    jne  loop
done:
    ret

#Stack starts here and grows to lower addresses
    .pos 0x200
stack:
